{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c7140ada",
   "metadata": {},
   "source": [
    "# PART-B (1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "70f5db88",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Importing Libaray \n",
    "import numpy as nu\n",
    "import pandas as ps\n",
    "import sklearn as sl\n",
    "import matplotlib.pyplot as plt\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1569df56",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Loading data set\n",
    "dframe = ps.read_csv(\"E:/Re-Assessment/MTHM017J_ref_def/Classification.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "21b516fb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1000 entries, 0 to 999\n",
      "Data columns (total 4 columns):\n",
      " #   Column      Non-Null Count  Dtype  \n",
      "---  ------      --------------  -----  \n",
      " 0   Unnamed: 0  1000 non-null   int64  \n",
      " 1   X1          1000 non-null   float64\n",
      " 2   X2          1000 non-null   float64\n",
      " 3   Group       1000 non-null   int64  \n",
      "dtypes: float64(2), int64(2)\n",
      "memory usage: 31.4 KB\n"
     ]
    }
   ],
   "source": [
    "dframe.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2e705966",
   "metadata": {},
   "outputs": [],
   "source": [
    "dframe.drop(columns=['Unnamed: 0'],inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dffc4c8e",
   "metadata": {},
   "source": [
    " (1) Summarise the two groups in terms of the variables X1 and X2, and for each group plot the distribution of both variables. Describe your findings."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1c72120f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>X1</th>\n",
       "      <th>X2</th>\n",
       "      <th>Group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1.007927</td>\n",
       "      <td>0.399027</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.472480</td>\n",
       "      <td>0.839122</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>-0.395737</td>\n",
       "      <td>-0.120650</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>-0.155861</td>\n",
       "      <td>1.193433</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.453269</td>\n",
       "      <td>0.674206</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>993</th>\n",
       "      <td>-0.159649</td>\n",
       "      <td>-1.393399</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>994</th>\n",
       "      <td>-1.902844</td>\n",
       "      <td>-0.502929</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>-0.089104</td>\n",
       "      <td>-0.233336</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>0.579058</td>\n",
       "      <td>-0.452603</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>-0.983543</td>\n",
       "      <td>-1.033982</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>537 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           X1        X2  Group\n",
       "0   -1.007927  0.399027      1\n",
       "1   -0.472480  0.839122      1\n",
       "5   -0.395737 -0.120650      1\n",
       "6   -0.155861  1.193433      1\n",
       "9    0.453269  0.674206      1\n",
       "..        ...       ...    ...\n",
       "993 -0.159649 -1.393399      1\n",
       "994 -1.902844 -0.502929      1\n",
       "996 -0.089104 -0.233336      1\n",
       "998  0.579058 -0.452603      1\n",
       "999 -0.983543 -1.033982      1\n",
       "\n",
       "[537 rows x 3 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Summarizing X1 and X2 in terms of Group (0,1)\n",
    "dframe.loc[dframe['Group'] == 1 ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "72925278",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>X1</th>\n",
       "      <th>X2</th>\n",
       "      <th>Group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.745229</td>\n",
       "      <td>-1.279742</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.597908</td>\n",
       "      <td>-1.942436</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.186984</td>\n",
       "      <td>-1.541910</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.382044</td>\n",
       "      <td>-1.700433</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.684346</td>\n",
       "      <td>-0.890675</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>-0.836398</td>\n",
       "      <td>-0.772773</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>991</th>\n",
       "      <td>1.410255</td>\n",
       "      <td>0.279341</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>992</th>\n",
       "      <td>0.045212</td>\n",
       "      <td>-1.147023</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>2.257665</td>\n",
       "      <td>2.327370</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>-0.296075</td>\n",
       "      <td>-2.056729</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>463 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           X1        X2  Group\n",
       "2    0.745229 -1.279742      0\n",
       "3   -0.597908 -1.942436      0\n",
       "4    0.186984 -1.541910      0\n",
       "7    0.382044 -1.700433      0\n",
       "8    0.684346 -0.890675      0\n",
       "..        ...       ...    ...\n",
       "988 -0.836398 -0.772773      0\n",
       "991  1.410255  0.279341      0\n",
       "992  0.045212 -1.147023      0\n",
       "995  2.257665  2.327370      0\n",
       "997 -0.296075 -2.056729      0\n",
       "\n",
       "[463 rows x 3 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dframe.loc[dframe['Group'] == 0 ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "db643e87",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>X1</th>\n",
       "      <th>X2</th>\n",
       "      <th>Group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.002033</td>\n",
       "      <td>0.016308</td>\n",
       "      <td>0.537000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.989321</td>\n",
       "      <td>1.009761</td>\n",
       "      <td>0.498879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-3.055858</td>\n",
       "      <td>-3.414288</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.679636</td>\n",
       "      <td>-0.625656</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>-0.038071</td>\n",
       "      <td>0.014719</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.649037</td>\n",
       "      <td>0.669465</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3.285469</td>\n",
       "      <td>3.943965</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                X1           X2        Group\n",
       "count  1000.000000  1000.000000  1000.000000\n",
       "mean      0.002033     0.016308     0.537000\n",
       "std       0.989321     1.009761     0.498879\n",
       "min      -3.055858    -3.414288     0.000000\n",
       "25%      -0.679636    -0.625656     0.000000\n",
       "50%      -0.038071     0.014719     1.000000\n",
       "75%       0.649037     0.669465     1.000000\n",
       "max       3.285469     3.943965     1.000000"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dframe.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5406ee4e",
   "metadata": {},
   "source": [
    "Subdivision (2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "42de7bad",
   "metadata": {},
   "outputs": [],
   "source": [
    "dframe['Group'] = dframe['Group'].astype('category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "23bd248c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Graph\n",
    "import seaborn as sns\n",
    "sns.set_style(style='whitegrid')\n",
    "sns.scatterplot(\n",
    "    data=dframe, \n",
    "    x='X1', \n",
    "    y='X2',\n",
    "    hue='Group',\n",
    "    style='Group',\n",
    "    palette='Paired_r'\n",
    "    )\n",
    "\n",
    "plt.title('')\n",
    "plt.xlabel('X1')\n",
    "plt.ylabel('X2')\n",
    "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "570c8510",
   "metadata": {},
   "source": [
    "We have two explanatory variables, X1 and X2, which we must divide into two groups, such as Group0 and Group1, according to the dataset summary. We have two groups, so it is obvious that we are interested in binary classification. It can be inferred from the plot of the data points that the two classes are not clearly separated and that the data may be normally distributed. Additionally, group 1 does have a wider distribution than group 0. \n",
    "\n",
    "Here, we use five classifiers, including the Support Vector Machine (SVM), Random Forest, K-Nearest Neighbors (KNN), and Linear Discriminant Analysis (LDA). SVM performs well for binary classification in these cases. The assumption that all classes should share variance is not met in the case of LDA, though. Additionally, I suppose that because the classes are not clearly separated, the linear decision boundary may not be effective in this situation. I've decided to use QDA, SVM, KNN, and Random Forest classifiers for my classification. The Confusion matrix can assess each classifier's performance. Accuracy, sensitivity, and specificity are just a few of the metrics that can be measured using a confusion matrix. The proportion of correctly predicted points to all data points is known as the accuracy. The number of accurate positive predictions divided by the total number of positives is how sensitivity is determined, and the number of accurate negative predictions divided by the total number of negatives is how specificity is determined. I have chosen accuracy in this case as the best metric to assess a classifier."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "800e6566",
   "metadata": {},
   "source": [
    "##  PART-B Subdivision (3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "52a8f255",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    537\n",
       "0    463\n",
       "Name: Group, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Seperating data set into x and y \n",
    "y_dframe = dframe[['Group']]\n",
    "x_dframe = dframe[['X1', 'X2']]\n",
    "type(y_dframe)\n",
    "#Checing the balance of the dataset\n",
    "dframe['Group'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4deb3e23",
   "metadata": {},
   "source": [
    "From the count we can confirm that the dataset is Imbalanced.hence we will use UpSampling and Downsampling to balance the dataset.\n",
    "Upsampling and downsampling are the two main strategies used to address the class imbalance. Only the training set is subject to the sampling process; the validation and testing data are left unchanged.\n",
    "\n",
    "what is an Imbalanced Dataset?.\n",
    "The target classes' distribution of the training samples is not balanced. For instance, in our data set class 0 has less number of  record than class 1. Because of it ,   The model's predictive ability suffers as a result of being more biassed toward the class with a large number of training instances.In the case of a typical binary classification problem, it also causes a rise in Type II errors. \n",
    "\n",
    "Upsampling involves injecting artificially produced data points (corresponding to the minority class) into the dataset. The counts for both labels are nearly equal after this procedure. The model won't tend to favour the class with the majority of members thanks to this equalisation process. Additionally, the boundary line (interaction) between the target classes is unaltered. Additionally, because of the extra information, the upsampling mechanism introduces bias into the system.\n",
    "\n",
    "The mechanism of downsampling lowers the number of training samples belonging to the majority class. Considering that it aids in balancing out target category counts. We frequently lose a lot of important information when we delete the collected data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4c6ab632",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split test/train with setting the seed\n",
    "from sklearn.model_selection import train_test_split\n",
    "xTrain, xTest, yTrain, yTest = train_test_split(x_dframe, y_dframe,train_size=0.70, random_state = 100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40a3729c",
   "metadata": {},
   "source": [
    "Spliting the dataset into train and test data in 70% and 30% ratio respectively. So that we can train the model and test it using this splited dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "438c3f2c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(700, 2) (700, 1) (300, 2) (300, 1)\n"
     ]
    }
   ],
   "source": [
    "#checking the shapes of the Train and Test Data\n",
    "print(xTrain.shape,yTrain.shape,xTest.shape,yTest.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ba39996d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    350\n",
       "1    350\n",
       "Name: Group, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Upsampling and DownSampling the yTrain as the data-set to remove the imbalaced\n",
    "# Separate majority and minority classes\n",
    "from sklearn.utils import resample\n",
    "df_majority = yTrain[yTrain.Group==1]\n",
    "df_minority = yTrain[yTrain.Group==0]\n",
    "y_downsampled = resample(df_majority, replace=True, n_samples=350)\n",
    "y_upsampled = resample(df_minority, replace=True,n_samples=350)\n",
    "df_up_sampled = ps.concat([y_downsampled, y_upsampled])\n",
    "df_up_sampled['Group'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd50ec41",
   "metadata": {},
   "source": [
    "Because the data set is imbalanced, we have changed the measurement metrics from Accuracy to Precision, Recall, and F1 Score. But not even they are so remarkable. When working with imbalance data, AUC Curves and Average Precision are the methodologies to take into account. Plotting the AUC and ROC curves finally led to the identification of the best model. ((Hosgungor, 2022)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4c4a8a6",
   "metadata": {},
   "source": [
    "##  PART-B Subdivision (4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0ec3d42b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Importing more Libaray and Functions\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.model_selection import RepeatedKFold\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn import datasets\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.model_selection import RepeatedStratifiedKFold\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.metrics import classification_report"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f72639e",
   "metadata": {},
   "source": [
    "# KNN"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdfe302d",
   "metadata": {},
   "source": [
    "Each observation in the KNN approach is categorized based on the nearby data points. A data point is categorized according to the majority votes of its neighbors. If a datapoint has 3 neighbors from class B and 5 neighbors from class A, it will be categorized as having the majority of Class A neighbors. However, choosing the number of neighbors to take into account when classifying the new data point is crucial. This number, which we designate as K, is extremely important for enhancing performance. The model may be too flexible and have low bias and high variance if this K is set too low; conversely, if it is set too high, the model may have low variance and high bias. Here, the KNN classifier has been implemented with K=6 chosen at random.\n",
    "\n",
    "We import the KNN function from the sklearn and trained the base model with xTrain and yTrain dataset. Following this we use this trained model to predict response variable for given xTest data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d7e13ca5",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNeighborsClassifier(n_neighbors=9)\n"
     ]
    }
   ],
   "source": [
    "knn = KNeighborsClassifier(n_neighbors=6)\n",
    "knn.fit(xTrain, yTrain)\n",
    "yTestPred_knn = knn.predict(xTest)\n",
    "\n",
    "# Repeat 10-fold cross-validation, five times, again we set the seed\n",
    "cv = RepeatedKFold(n_splits=10, n_repeats=5, random_state=1)\n",
    "Knn_model = GridSearchCV(estimator=KNeighborsClassifier(),param_grid={'n_neighbors': range(2, 15)}, cv=cv)\n",
    "# Find optimal k (model)\n",
    "# Fit the previously defined GridSearchCV to our taining dataset.\n",
    "Knn_model.fit(xTrain, yTrain)\n",
    "print(Knn_model.best_estimator_)\n",
    "\n",
    "tPred_knn = Knn_model.predict(xTest) # evaluate performance on test data\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "5359b120",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNeighborsClassifier(n_neighbors=9)\n",
      "Metrics of KNN Before Tunning:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.77      0.83      0.80       127\n",
      "           1       0.87      0.82      0.84       173\n",
      "\n",
      "    accuracy                           0.82       300\n",
      "   macro avg       0.82      0.82      0.82       300\n",
      "weighted avg       0.83      0.82      0.82       300\n",
      " \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(Knn_model.best_estimator_)\n",
    "print(\"Metrics of KNN Before Tunning:\")\n",
    "print(classification_report(yTest, yTestPred_knn) ,\"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9de920da",
   "metadata": {},
   "source": [
    "The accuracy of the KNN model with tunning is 82%. Now we will try to increase the accuracy of the KNN classification by tunning the model. We using the parameter K and choosing the optimal value for it. \n",
    "Now, by choosing the ideal K, we can increase the accuracy. To find the best K value we perform 10-fold cross validation where t he dataset has been divided into 10 equal parts, and data has been trained and tested for various k values(ranges given from 2 to 15), in order to select the accurate K.  We select the K value of model which provide highest accuracy.\n",
    "\n",
    "We found the best estimator is k=9. \n",
    "\n",
    "What is GridSearchCV?\n",
    "GridSearchCV is a library function included in the model selection package of sklearn. Fitting your estimator (model) to your training set will allow you iterate through specified hyperparameters. As a result, from the list of hyperparameters, you may choose the optimal parameters.\n",
    "\n",
    "We gonna use GridSearchCV to hyper tune the model. And from this model we repeat all the steps except the repeated k-fold. \n",
    "here we have the param_grid range 2 to 15. From this the n_neighbors value changes between 2 to 15. the GridsearchCV have selected the n_neighbors value as 9. Again we check the metric of the tunned model to estimate the performerce of the tunned model. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "36880227",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Metrics of KNN After Tunning:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.80      0.83      0.82       127\n",
      "           1       0.87      0.84      0.86       173\n",
      "\n",
      "    accuracy                           0.84       300\n",
      "   macro avg       0.84      0.84      0.84       300\n",
      "weighted avg       0.84      0.84      0.84       300\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Metrics of KNN After Tunning:\")\n",
    "print(classification_report(yTest, tPred_knn))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8286b4d",
   "metadata": {},
   "source": [
    "Now we will compare the base model performernce and tuned model performernce.\n",
    "The classification report of tunned model shows accurcy of 84%. This is a significant increase in  accuracy of the model after Tunning the model\n",
    "The performence of tuned model is better than base model. \n",
    "Hence we taking the Tuned model."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a4d6a9b",
   "metadata": {},
   "source": [
    "# SVM"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2cb00a56",
   "metadata": {},
   "source": [
    "We import the SVM function from the sklearn and train the  base model with xTrain and yTrain dataset. Following this we use this model to predict response variable for given xTest data.\n",
    "\n",
    "The support vector machine is a generalisation of the Maximum marginal classifier and this can be mainly used for binary. According to the maximum marginal classifier we have to  find straight line caller the \"optimal separating hyperplane\" , which provides the greatest separation between the classes in the dataset.\n",
    "\n",
    "However, it is challenging to locate a plane that accurately divides the classes. The points on the incorrect side are minima, so the objective is to locate the plane that offers the best separation. Each data point can be connected to a slack variable using a support vector classifier to achieve this. The value is assigned as 0 if the data point is on the right side of the hyperplane and the margin, and assigned between 0 and 1 if it is on the right side of the hyperplane and the wrong side of the margin. The value assigned will be greater than one if the data point is on the incorrect side of the hyperplane, however. A constant is created by adding up all the slack variables, and this constant can be used as a tuning parameter. While the support vector machine (SVM-Extended version of SVC) can be used for non-linear separation, the support vector classifier only works for linear separation lines.\n",
    "In the SVM, optimization is carried out in two different ways: using the appropriate kernel and constants. Typically, SVM uses kernels of four different types: linear, polynomial, radial, and sigmoid. To achieve high accuracy, the effective kernel should be used. Here, the Constant C is initially set to 1, and the SVM is implemented using various kernels. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2e870182",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "from sklearn.svm import SVC\n",
    "\n",
    "#Base Model\n",
    "svm_model = SVC(probability=True, C=1.0)\n",
    "svm_model.fit(xTrain,yTrain)\n",
    "svm_pred = svm_model.predict(xTest)\n",
    "\n",
    "#Tunning the Model\n",
    "cv = RepeatedKFold(n_splits=10, n_repeats=5, random_state=100)\n",
    "paramGrid =[{'kernel': ['rbf'], 'gamma':[1e-3,1e-4], 'C':[1,10,100,1000]},{'kernel':['poly'],'degree':[1,2,3], 'C': [1,10,100,1000]}]\n",
    "svm_model1 = GridSearchCV(estimator=SVC(),param_grid=paramGrid, cv=cv)\n",
    "# Fit the previously defined GridSearchCV to our taining dataset.\n",
    "svm_model1.fit(xTrain, yTrain)\n",
    "svm_pred1 =svm_model1.predict(xTest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "dd1d9fd4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SVC(C=1000, gamma=0.0001)\n",
      "Metrics of SVM Before Tunning:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.80      0.84      0.82       127\n",
      "           1       0.88      0.85      0.86       173\n",
      "\n",
      "    accuracy                           0.85       300\n",
      "   macro avg       0.84      0.85      0.84       300\n",
      "weighted avg       0.85      0.85      0.85       300\n",
      " \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(svm_model1.best_estimator_)\n",
    "print(\"Metrics of SVM Before Tunning:\")\n",
    "print(classification_report(yTest, svm_pred) ,\"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "475b963b",
   "metadata": {},
   "source": [
    "The Accuracy of base model is 85 %. Now lets try to improve the performance of the model by tunning the model. We taking three parameters and give the value in it and passing the values through the Gridsearch and cross-validation.This choose the best parameter  from the given. We then build and train a model using the tunning parameters. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e50c1201",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Metrics of SVM After Tunning:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.77      0.77      0.77       127\n",
      "           1       0.83      0.83      0.83       173\n",
      "\n",
      "    accuracy                           0.81       300\n",
      "   macro avg       0.80      0.80      0.80       300\n",
      "weighted avg       0.81      0.81      0.81       300\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Metrics of SVM After Tunning:\")\n",
    "print(classification_report(yTest, svm_pred1))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "098647d8",
   "metadata": {},
   "source": [
    "The tuned model's accuracy is 81%, which is less than the accuracy of the base model. which generally won't occur.\n",
    "\n",
    "However, by incorporating the techniques known as upsampling and downsampling, we are able to balance the dataset and prevent it from being unbalanced.\n",
    "\n",
    "To compare the models and choose the best one, we will take the ROC curve into account."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc042acb",
   "metadata": {},
   "source": [
    "# Quadratic Discriminant Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37d47200",
   "metadata": {},
   "source": [
    "The Bayes theorem is used in both LDA and QDA classification. The probability of belonging to one class is typically measured directly in KNN-type classifiers, whereas LDA and QDA's probability measuring approach can be thought of as indirect. Here, the prior probability is taken into account and combined with likelihood to create the posterior probability. Major differnets between LDA and QDA is that the LDA work on assumption like,  Each class's explanatory variable distributions adhere to the Normal distribution and  the variance is shared among the classes (all classes have equally shared variances). Where as the Quadratic Discriminant Analysis (QDA) only adheres to the first assumption of LDA, so the distribution of classes may not be equal."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "5e723e29",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.80      0.78      0.79       127\n",
      "           1       0.84      0.86      0.85       173\n",
      "\n",
      "    accuracy                           0.83       300\n",
      "   macro avg       0.82      0.82      0.82       300\n",
      "weighted avg       0.83      0.83      0.83       300\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis \n",
    "\n",
    "\n",
    "model_qda = QuadraticDiscriminantAnalysis()\n",
    "model_qda.fit(xTrain, yTrain) \n",
    "#Prediction\n",
    "qda_pred = model_qda.predict(xTest)\n",
    "\n",
    "print(classification_report(yTest, qda_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8de8b372",
   "metadata": {},
   "source": [
    "We import the QDA function from the sklearn and train the  base model with xTrain and yTrain dataset. Following this we use this model to predict response variable for given xTest data.\n",
    "\n",
    "Now we are checking the accuracy, f1 score and Recall of this model. We gonna consider f1 score and recall as the data set is imbalaced. \n",
    "We taking classfication report from that we check the precision value and recall and f1 score of predict of 0 and 1. \n",
    "\n",
    "\n",
    "The QDA method yields an accuracy rate of 83%."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b97903a7",
   "metadata": {},
   "source": [
    "# Comparing Models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f1bddec9",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'SVM': 0.9322060898457057, 'KNN': 0.9051704519594009, 'QDA': 0.9050566656046607}\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x550 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#prediction probabilities\n",
    "svm_prob=svm_model.predict_proba(xTest)\n",
    "knn_prob=knn.predict_proba(xTest)\n",
    "qda_prob = model_qda.predict_proba(xTest)\n",
    "from sklearn.metrics import roc_curve\n",
    "\n",
    "# roc curve for models\n",
    "fpr1, tpr1, thresh1 = roc_curve(yTest, svm_prob[:,1], pos_label=1)\n",
    "fpr2, tpr2, thresh2 = roc_curve(yTest, knn_prob[:,1], pos_label=1)\n",
    "fpr4, tpr4, thresh4 = roc_curve(yTest, qda_prob[:,1], pos_label=1)\n",
    "\n",
    "# roc curve for tpr = fpr \n",
    "random_probs = [0 for i in range(len(yTest))]\n",
    "p_fpr, p_tpr, _ = roc_curve(yTest, random_probs, pos_label=1)\n",
    "\n",
    "from sklearn.metrics import roc_auc_score\n",
    "\n",
    "#The roc auc score() function of sklearn may be used to calculate the AUC score\n",
    "# auc scores\n",
    "auc_score1 = roc_auc_score(yTest, svm_prob[:,1])\n",
    "auc_score2 = roc_auc_score(yTest, knn_prob[:,1])\n",
    "auc_score4 = roc_auc_score(yTest, qda_prob[:,1])\n",
    "print({'SVM':auc_score1, \"KNN\" :auc_score2, \"QDA\":auc_score4})\n",
    "\n",
    "\n",
    "# matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "plt.style.use('seaborn')\n",
    "\n",
    "# plot roc curves\n",
    "plt.plot(fpr1, tpr1, linestyle='--',color='orange', label='SVM')\n",
    "plt.plot(fpr2, tpr2, linestyle='--',color='green', label='KNN')\n",
    "plt.plot(fpr4, tpr4, linestyle='--',color='blue', label='QDA')\n",
    "#plt.plot(p_fpr, p_tpr, linestyle='--', color='blue')\n",
    "# title\n",
    "plt.title('ROC curve')\n",
    "# x label\n",
    "plt.xlabel('False Positive Rate')\n",
    "# y label\n",
    "plt.ylabel('True Positive rate')\n",
    "\n",
    "plt.legend(loc='best')\n",
    "plt.savefig('ROC',dpi=300)\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "daa692f2",
   "metadata": {},
   "source": [
    "What is the AUC-ROC curve?\n",
    "\n",
    "A measurement tool for binary classification problems is the Receiver Operator Characteristic (ROC) curve espiecialy when the dataset is imbalanced. In essence, it separates the \"signal\" from the \"noise\" by plotting the TPR against the FPR at different threshold levels. The capacity of a classifier to differentiate between classes is measured by the Area Under the Curve (AUC), which is used as a summary of the ROC curve. (“AUC-ROC Curve in Machine Learning Clearly Explained - Analytics Vidhya”)\n",
    "\n",
    "The performance of the model in differentiating between the positive and negative classes improves with increasing AUC.\n",
    "When the AUC is 1, the classifier is able to accurately discriminate between every Positive and every Negative class point. The classifier is unable to discriminate between Positive and Negative class points when the AUC value is less than 0.5. (“AUC-ROC Curve in Machine Learning Clearly Explained - Analytics Vidhya”)\n",
    "\n",
    "The extremely effective Sklearn function roc curve() quickly calculates the ROC for your classifier! The FPR, TPR, and threshold values are returned."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a374d80f",
   "metadata": {},
   "source": [
    "\n",
    "It is evident from the plot that the AUC for the SVM ROC Curve is higher than that for all other models. therefore we can say that SVM is best model for classifiying."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbe86096",
   "metadata": {},
   "source": [
    "Works Cited\n",
    "\n",
    "\n",
    "1) “AUC-ROC Curve in Machine Learning Clearly Explained - Analytics Vidhya.” Analytics Vidhya, https://www.facebook.com/AnalyticsVidhya/, 15 June 2020, https://www.analyticsvidhya.com/blog/2020/06/auc-roc-curve-machine-learning/.\n",
    "\n",
    "2) Hosgungor, E., 2022. How to Handle Imbalance Data and Small Training Sets in ML. [online] Medium. Available at: <https://towardsdatascience.com/how-to-handle-imbalance-data-and-small-training-sets-in-ml-989f8053531d> [Accessed 1 August 2022]."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
